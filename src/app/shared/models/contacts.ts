export interface OrganizationWithContacts {
  id: number;
  name: string;
  contacts: Contact[];
  stakeholderId:any;
}
export interface Contact {
  accountGoogleLinked: string;
  accountMicrosoftLinked: string;
  address: string;
  area: string;
  assistantName: string;
  capSnapId: string;
  capSnapOrgId: string;
  cellPhone: string;
  clientURL: string;
  createdDate: string;  
  dropBoxAccessToken: string;
  dropBoxRefreshToken: string;
  email: string;
  email2: string;
  email3: string;
  firstName: string;
  flag: string;
  formattedCellPhone: string;
  googleAccessToken: string;
  googleRefreshToken: string;
  guidSignature: string;
  id: number;
  isEncrypted: boolean;
  isOwner: boolean;
  jobTitle: string;
  lastActive: string;
  lastName: string;
  lastReadMailsTime: string;
  lastSignInDate: string;
  linkedIn: string;
  mailId: string;
  microsoftAccessToken: string;
  microsoftRefreshToken: string;
  netlifyAccessToken: string;
  netlifyId: string;
  netlifyPassword: string;
  netlifyRefreshToken: string;
  netlifySiteId: string;
  notes: string;
  numberOfMonthsToScan: number;
  openAIKey: string;
  organizationId: number;
  password: string;
  phone1: string;
  phone2: string;
  photo: string;
  pipedriveId: string;
  profile: string;
  readEmailWithReplies: boolean;
  resetExpirationDate: string;
  resetToken: string;
  robinFeatures: string;
  sendMailTypeId: number;
  signature: string;
  source: string;
  submissionId: string;
  token: string;
  virtualEmail: string;
  wantToLinkAccount: boolean;
}