/* The main container for the tree, used for centering and background */
.tree-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 2rem;
  background-color: #f8fafc;
  min-height: 100vh;
}

/* Base class for the tree structure */
.tree {
  display: inline-flex;
  flex-direction: column;
  align-items: center;
}

/* A single node in the tree. It contains the box and the children container. */
.tree-node {
  padding: 1.5rem 0.5rem 0 0.5rem;
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* The visible box representing an employee or department */
.node-box {
  padding: 0.75rem 1.5rem;
  border: 1px solid #cbd5e1;
  background: #fff;
  border-radius: 0.5rem;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -2px rgba(0, 0, 0, 0.1);
  position: relative;
  z-index: 1; /* Ensures the box is drawn on top of the connector lines */
  text-align: center;
  transition: transform 0.2s, box-shadow 0.2s;
  min-width: 150px;
}

.node-box:hover {
  transform: translateY(-2px);
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -4px rgba(0, 0, 0, 0.1);
}

.node-name {
  font-size: 1rem;
  font-weight: 600;
  color: #1e293b;
}

.node-role {
  font-size: 0.875rem;
  color: #64748b;
}

/* Container for all children of a node */
.tree-children {
  display: flex;
  justify-content: center;
  position: relative;
}

/* --- CSS-based Connector Lines --- */

/* Vertical line coming DOWN from a parent's box */
.node-box::after {
  content: "";
  position: absolute;
  /* Position it to start from the bottom center of the box */
  bottom: -1.5rem; /* This value must match the top padding of .tree-node */
  left: 50%;
  transform: translateX(-50%);
  width: 2px;
  height: 1.5rem;
  background-color: #cbd5e1;
}

/* Hide the downward connector for leaf nodes (nodes with no children) */
.leaf-node > .node-box::after {
  display: none;
}

/* * Upward and Horizontal connectors for children nodes.
       * ::before draws the left half of the line and the upward vertical connector.
       * ::after draws the right half of the line.
      */
.tree-node::before,
.tree-node::after {
  content: "";
  position: absolute;
  top: 0;
  width: 50%;
  height: 1.5rem; /* This value must match the top padding of .tree-node */
  border-top: 2px solid #cbd5e1;
}

/* Horizontal line pointing left, plus vertical line */
.tree-node::before {
  left: 0;
  border-right: 2px solid #cbd5e1;
}

/* Horizontal line pointing right */
.tree-node::after {
  right: 0;
}

/* --- Special cases for first, last, and single children --- */

/* The very first node (root) should not have any lines above it. */
.tree > .tree-node::before,
.tree > .tree-node::after {
  display: none;
}

/* First child only needs the right half of the line, not the left. */
.tree-node:first-child::before {
  display: none;
}

/* Last child only needs the left half of the line, not the right. */
.tree-node:last-child::after {
  display: none;
}

/* A single child doesn't need any horizontal lines, just a vertical one. */
.tree-node:only-child::before,
.tree-node:only-child::after {
  display: none;
}

/* Re-add a simple vertical line for single children. */
.tree-node:only-child::before {
  display: block;
  content: "";
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 2px;
  height: 1.5rem;
  background-color: #cbd5e1;
  /* Clear any border properties from the general rule */
  border: none;
}
